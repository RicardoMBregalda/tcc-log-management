# ========================================
# POSTGRESQL CUSTOM QUERIES - TCC
# ========================================
# Queries personalizadas para métricas específicas do TCC
# ========================================

# Query para métricas de replicação
pg_replication:
  query: |
    SELECT
      CASE WHEN pg_is_in_recovery() THEN 1 ELSE 0 END as is_standby,
      CASE WHEN NOT pg_is_in_recovery() THEN 
        EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))
      ELSE 0 END as replication_lag_seconds
  metrics:
    - is_standby:
        usage: "GAUGE"
        description: "Indica se é standby (1) ou primário (0)"
    - replication_lag_seconds:
        usage: "GAUGE"
        description: "Lag de replicação em segundos"

# Query para contagem de logs por severidade
pg_logs_by_severity:
  query: |
    SELECT
      severity,
      COUNT(*) as log_count
    FROM logs
    WHERE created_at > NOW() - INTERVAL '1 hour'
    GROUP BY severity
  metrics:
    - severity:
        usage: "LABEL"
        description: "Nível de severidade do log"
    - log_count:
        usage: "GAUGE"
        description: "Quantidade de logs por severidade na última hora"

# Query para tamanho da tabela de logs
pg_logs_table_size:
  query: |
    SELECT
      pg_size_pretty(pg_total_relation_size('logs')) as size_pretty,
      pg_total_relation_size('logs') as size_bytes,
      (SELECT COUNT(*) FROM logs) as total_rows
  metrics:
    - size_bytes:
        usage: "GAUGE"
        description: "Tamanho total da tabela logs em bytes"
    - total_rows:
        usage: "GAUGE"
        description: "Total de linhas na tabela logs"

# Query para performance de queries
pg_stat_statements_summary:
  query: |
    SELECT
      queryid,
      substring(query, 1, 50) as query_short,
      calls,
      total_exec_time / 1000 as total_time_seconds,
      mean_exec_time / 1000 as mean_time_seconds,
      max_exec_time / 1000 as max_time_seconds
    FROM pg_stat_statements
    WHERE query LIKE '%logs%'
    ORDER BY total_exec_time DESC
    LIMIT 10
  metrics:
    - queryid:
        usage: "LABEL"
        description: "ID da query"
    - query_short:
        usage: "LABEL"
        description: "Início da query"
    - calls:
        usage: "COUNTER"
        description: "Número de execuções"
    - total_time_seconds:
        usage: "COUNTER"
        description: "Tempo total de execução em segundos"
    - mean_time_seconds:
        usage: "GAUGE"
        description: "Tempo médio de execução em segundos"
    - max_time_seconds:
        usage: "GAUGE"
        description: "Tempo máximo de execução em segundos"

# Query para estatísticas de conexões
pg_connection_stats:
  query: |
    SELECT
      COUNT(*) FILTER (WHERE state = 'active') as active_connections,
      COUNT(*) FILTER (WHERE state = 'idle') as idle_connections,
      COUNT(*) FILTER (WHERE state = 'idle in transaction') as idle_in_transaction,
      COUNT(*) as total_connections
    FROM pg_stat_activity
    WHERE datname = 'logdb'
  metrics:
    - active_connections:
        usage: "GAUGE"
        description: "Conexões ativas no banco logdb"
    - idle_connections:
        usage: "GAUGE"
        description: "Conexões idle no banco logdb"
    - idle_in_transaction:
        usage: "GAUGE"
        description: "Conexões idle em transação no banco logdb"
    - total_connections:
        usage: "GAUGE"
        description: "Total de conexões no banco logdb"

# Query para estatísticas de cache
pg_cache_hit_ratio:
  query: |
    SELECT
      sum(heap_blks_read) as heap_read,
      sum(heap_blks_hit)  as heap_hit,
      sum(heap_blks_hit) / NULLIF(sum(heap_blks_hit) + sum(heap_blks_read), 0) * 100 as cache_hit_ratio
    FROM pg_statio_user_tables
  metrics:
    - heap_read:
        usage: "COUNTER"
        description: "Blocos lidos do disco"
    - heap_hit:
        usage: "COUNTER"
        description: "Blocos lidos do cache"
    - cache_hit_ratio:
        usage: "GAUGE"
        description: "Taxa de acerto do cache (%)"

# Query para estatísticas de I/O
pg_table_io_stats:
  query: |
    SELECT
      schemaname,
      tablename,
      heap_blks_read,
      heap_blks_hit,
      idx_blks_read,
      idx_blks_hit
    FROM pg_statio_user_tables
    WHERE tablename = 'logs'
  metrics:
    - schemaname:
        usage: "LABEL"
        description: "Nome do schema"
    - tablename:
        usage: "LABEL"
        description: "Nome da tabela"
    - heap_blks_read:
        usage: "COUNTER"
        description: "Blocos da tabela lidos do disco"
    - heap_blks_hit:
        usage: "COUNTER"
        description: "Blocos da tabela lidos do cache"
    - idx_blks_read:
        usage: "COUNTER"
        description: "Blocos de índice lidos do disco"
    - idx_blks_hit:
        usage: "COUNTER"
        description: "Blocos de índice lidos do cache"

# Query para locks
pg_locks_count:
  query: |
    SELECT
      mode,
      COUNT(*) as lock_count
    FROM pg_locks
    WHERE database = (SELECT oid FROM pg_database WHERE datname = 'logdb')
    GROUP BY mode
  metrics:
    - mode:
        usage: "LABEL"
        description: "Tipo de lock"
    - lock_count:
        usage: "GAUGE"
        description: "Quantidade de locks por tipo"
