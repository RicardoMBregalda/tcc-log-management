#!/bin/bash

# ==============================================================================
# Script para Configura√ß√£o Inicial do Ambiente do TCC
#
# Autor: Seu Nome
# Data: 21/09/2025
#
# Este script cria a estrutura de diret√≥rios necess√°ria para o projeto
# e o arquivo docker-compose.yml base que define a rede compartilhada.
# ==============================================================================

# Define o diret√≥rio raiz do projeto
PROJECT_ROOT="../"

# Mensagem de in√≠cio
echo "üöÄ Iniciando a configura√ß√£o do ambiente para o TCC..."

# Cria a estrutura de diret√≥rios
echo "üìÇ Criando estrutura de diret√≥rios..."
mkdir -p "${PROJECT_ROOT}traditional-architecture"
mkdir -p "${PROJECT_ROOT}hybrid-architecture/chaincode"
mkdir -p "${PROJECT_ROOT}hybrid-architecture/fabric-network"
mkdir -p "${PROJECT_ROOT}scripts"

# Cria o arquivo docker-compose.yml na raiz do projeto
# Usamos 'cat <<EOF >' para escrever um bloco de texto multilinha em um arquivo.
echo "üìÑ Gerando o arquivo docker-compose.yml de base..."
cat <<EOF > "${PROJECT_ROOT}docker-compose.yml"
version: '3.7'

# A se√ß√£o 'networks' define as redes que nossos servi√ßos podem usar.
# Vamos criar uma rede personalizada chamada 'log-net' para garantir
# que todos os cont√™ineres do projeto possam se comunicar usando
# nomes de servi√ßo como hostname.
networks:
  log-net:
    driver: bridge
    name: tcc_log_network
EOF

# Deixa placeholders vazios nos outros arquivos docker-compose para passos futuros
touch "${PROJECT_ROOT}traditional-architecture/docker-compose.yml"
touch "${PROJECT_ROOT}hybrid-architecture/docker-compose.yml"


echo "‚úÖ Estrutura de diret√≥rios e arquivos de configura√ß√£o base criados com sucesso!"
echo ""
echo "Pr√≥ximos passos:"
echo "1. Navegue para o diret√≥rio raiz do projeto ('cd tcc-log-management')."
echo "2. Suba a rede base com o comando: docker-compose up -d"
echo "3. Verifique se a rede foi criada com: docker network ls | grep tcc_log_network"